[project]
name = "erdantic"
version = "1.1.0.dev"
description = "Entity relationship diagrams for Python data model classes like Pydantic."
readme = "README.md"
authors = [{ name = "DrivenData", email = "info@drivendata.org" }, { name = "Jay Qi" }]
license = { text = "MIT License" }
keywords = ["erd", "entity relationship diagram", "dataclasses", "pydantic", "attrs"]
classifiers = [
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Code Generators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Framework :: Pydantic",
  "Framework :: Pydantic :: 2",
]
requires-python = ">=3.9"
dependencies = [
  "pydantic >= 2",
  "pydantic-core",
  "pygraphviz",
  "sortedcontainers-pydantic",
  "typenames >= 1.3",
  "typer",
  "typing_extensions>4 ; python_version < '3.12'",
]

[project.optional-dependencies]
attrs = ["attrs"]

[project.scripts]
erdantic = "erdantic.cli:app"

[project.urls]
"Repository" = "https://github.com/drivendataorg/erdantic"
"Documentation" = "https://erdantic.drivendata.org/"
"Bug Tracker" = "https://github.com/drivendataorg/erdantic/issues"
"Changelog" = "https://erdantic.drivendata.org/stable/changelog/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

## DEV

[dependency-groups]
dev = [
  "build",
  "ipython",
  "vspect",
]
docs = [
  "black",
  "markdown-callouts>=0.4.0",
  "mdx_truly_sane_lists==1.3",
  "mike",
  "mkdocs>=1.4",
  "mkdocs-jupyter",
  "mkdocs-material>=7.2.6",
  "mkdocstrings[python]>=0.19.0",
  "nbconvert>=7.7.0",
  "rich",
]
lint = [
  "ruff>=0.1.14",
]
test = [
  "filetype",
  "ipython",
  "pytest<8",
  "pytest-cases",
  "pytest-cov",
  "rich",
]
typecheck = [
  "mypy",
  "pip",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.pypi-dependencies]
erdantic = { path = ".", editable = true, extras = ["attrs"] }

[tool.pixi.feature.graphviz.dependencies]
graphviz = "==12.2.1"

[tool.pixi.feature.py39.dependencies]
python = "3.9.*"
[tool.pixi.feature.py310.dependencies]
python = "3.10.*"
[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
[tool.pixi.feature.py312.dependencies]
python = "3.12.*"
[tool.pixi.feature.py313.dependencies]
python = "3.13.*"

[tool.pixi.environments]
default = ["py313", "graphviz", "dev", "docs", "lint"]
test-py39 = ["py39", "graphviz", "test"]
test-py310 = ["py310", "graphviz", "test"]
test-py311 = ["py311", "graphviz", "test"]
test-py312 = ["py312", "graphviz", "test"]
test-py313 = ["py313", "graphviz", "test"]
typecheck = ["py313", "graphviz", "typecheck"]

## TOOLS

[tool.ruff]
line-length = 99
src = ["erdantic/**/*.py", "tests/**/*.py", "docs/**/*.py"]

[tool.ruff.lint]
select = [
  "E", # Pyflakes
  "F", # Pycodestyle
  "I", # isort
]
unfixable = ["F"]

[tool.ruff.lint.isort]
known-first-party = ["erdantic"]
force-sort-within-sections = true

[tool.mypy]
files = ["erdantic", "tests/typechecks.py"]
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=erdantic --cov-report=term --cov-report=html --cov-report=xml --cov-append"
testpaths = ["tests"]

[tool.coverage.run]
source = ["erdantic"]

[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:",
]
